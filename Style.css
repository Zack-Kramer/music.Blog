body {
    margin: 0 auto;
    width: 80vw;
    min-width: 800px;
    height: 100vw;
    background-color: brown;
}

html {
    font-size: 10px;
    /* background-color: brown; */
    background: linear-gradient(
        133deg,
        rgba(55, 217, 181, 1) 0%
        rgba(blue) 0%
        rgba(200, 201, 43, 7) 0%
    );
}

h1,h2 {
    font-family: "raleway," sans-serif;
    color:rgba(55, 217, 181, 1)
}

p, li{
    font-family: 'Times New Roman', Times, serif;
    color: rgba(55, 217, 181, 1);
}

/*
Rem's are a way of setting font-based size, based the font-size or the root HTML element. Allows you to quickly scale an entire project by changing the root font-size.

1 rem= 100% font size of the root element, default is 16px
ex: applied to h1: 4rem = 4 * h1
Btw, the 3 px's below mean WIDTH TIMES WIDTH TIMES HEIGHT essentially 
*/
h1 {
    font-size: 4rem
    text-align center;
    text-shadow: 2px 2px 10px;
}

h2 {
    font-size: 3rem;
    font-style: center;
}

header {
   /* margin: 0 0 10px p; */
   margin-bottom: 10px;
}

/* Commas state that we want to style "this" and "that" tag/element */

main, section, header, nav, article, aside, footer {
    background-color: brown;
    padding: 1%;
}

nav {
    height: 50px;
}

/* No commas state that we want to style "this" element WITHIN another/"that" element */
nav ul{
    display: flex;
}

nav li{
    list-style-type: none;
    text-align: center;
    flex: 1;
}

/* flex-grow
specifies how much the item will grow.
1 unitless value (ie: the number 1 here)
flex-shrink
specifies how much the item will shrink
2 unitless values (not shown)
flex-basis
specifies initial length of a flexible item
One value w/ unit
nav li will take up 100% of the container with
*/

nav a, li {
    font-size: 2rem;
    height: 3rem;
    text-transform: uppercase;
    text-decoration: none;
    color: white;
}

main {
    display: flex;
}

/* 4 = 80% of the container (4/4+1) */
section, article{
    flex: 4;
}

aside {
    flex: 1;
    margin-left: 10px;
    padding: 1%;
}

aside a {
    float: left;
    width: 50%;
}

aside img{
    max-width: 100%;
    
}